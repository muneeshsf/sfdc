// List of user emails to process
List<String> userEmails = new List<String>{'kaurharveen@business.fb.com','priyankkumari@business.fb.com','yaseenhaider@business.fb.com','rameshprithvi@business.fb.com','paturshitajugal@business.fb.com','guptakartikeya@business.fb.com','javanbaksomayeh@business.fb.com','ganotrasimran@business.fb.com','kapilaricha@business.fb.com','anushaanusha@business.fb.com','bodudeanthony@business.fb.com','ikeobichigozie@business.fb.com','adeoyedaniels@business.fb.com',
'kabarvirajkumar@business.fb.com','kouasjeannechar@business.fb.com','morrisoncameron@business.fb.com',
'sarkarshubendu@business.fb.com','jamgomes@business.fb.com'};

// Query user records
List<User> users = [SELECT Id, Name, Email, IsActive FROM User WHERE Email IN :userEmails];

// Prepare buckets
List<User> activeUsers = new List<User>();
List<User> inactiveUsers = new List<User>();
Map<Id, String> resetSuccessMap = new Map<Id, String>();

// Categorize users
for (User u : users) {
    if (u.IsActive) {
        activeUsers.add(u);
    } else {
        inactiveUsers.add(u);
    }
}

// Reset passwords for active users
// Reset passwords for active users
for (User u : activeUsers) {
    try {
        System.resetPassword(u.Id, true);  // Corrected method
        resetSuccessMap.put(u.Id, u.Email);
    } catch (Exception ex) {
        System.debug('Password reset failed for: ' + u.Email + ' | ' + ex.getMessage());
    }
}

// Build HTML for inactive users
String inactiveHtml = '<h2>Inactive Users</h2><table border="1" cellpadding="5" cellspacing="0">';
inactiveHtml += '<tr><th>Name</th><th>Email</th></tr>';
for (User u : inactiveUsers) {
    inactiveHtml += '<tr><td>' + u.Name + '</td><td>' + u.Email + '</td></tr>';
}
inactiveHtml += '</table>';

// Build HTML for password reset success
String resetHtml = '<h2>Password Reset - Successful</h2><table border="1" cellpadding="5" cellspacing="0">';
resetHtml += '<tr><th>Name</th><th>Email</th></tr>';
for (User u : activeUsers) {
    if (resetSuccessMap.containsKey(u.Id)) {
        resetHtml += '<tr><td>' + u.Name + '</td><td>' + u.Email + '</td></tr>';
    }
}
resetHtml += '</table>';

// Combine final HTML body
String emailBody = '<html><body>' + resetHtml + '<br/>' + inactiveHtml + '</body></html>';

// Prepare email
Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
email.setToAddresses(new String[] { UserInfo.getUserEmail() });
email.setSubject('User Password Reset Report');
email.setHtmlBody(emailBody);

// Send email
Messaging.sendEmail(new Messaging.SingleEmailMessage[] { email });

// Log for debug
System.debug('Email sent to: ' + UserInfo.getUserEmail());
System.debug('HTML Content:\n' + emailBody);
